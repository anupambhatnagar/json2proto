cmake_minimum_required(VERSION 3.26.0)
project(trace)
set(CMAKE_CXX_FLAGS "-g -Wall -Werror -std=c++17")
find_package(Protobuf REQUIRED)

if ( Protobuf_FOUND )
    message( STATUS "Protobuf version : ${Protobuf_VERSION}" )
    message( STATUS "Protobuf include path : ${Protobuf_INCLUDE_DIRS}" )
    message( STATUS "Protobuf libraries : ${Protobuf_LIBRARIES}" )
    message( STATUS "Protobuf compiler libraries : ${Protobuf_PROTOC_LIBRARIES}")
    message( STATUS "Protobuf lite libraries : ${Protobuf_LITE_LIBRARIES}")
else()
    message( WARNING "Protobuf package not found -> specify search path via PROTOBUF_ROOT variable")
endif()

add_subdirectory(src)
include_directories(include)

include_directories(${CMAKE_CURRENT_BINARY_DIR})
include_directories(${Protobuf_INCLUDE_DIRS})
add_executable(json_reader json_reader.cpp)
add_executable(serializer serializer.cpp)
#target_link_libraries(json_reader proto ${Protobuf_LIBRARIES})
target_link_libraries(serializer proto ${Protobuf_LIBRARIES})
